<UserControl
    x:Class="HotelManager.UI.Views.Pages.SettingsUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:HotelManager.UI.Behaviors"
    xmlns:converters="clr-namespace:HotelManager.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:HotelManager.UI.Views.Pages"
    xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mdix="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DesignHeight="450"
    d:DesignWidth="800"
    DataContext="{Binding Source={StaticResource Locator}, Path=MainWindow.SettingsPageViewModel}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
            <converters:BrushToHexConverter x:Key="BrushToHexConverter"/>
            <converters:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter"/>

            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth0"/>
            </Style>

            <Style
                x:Key="HexLabelTextBlock"
                BasedOn="{StaticResource MaterialDesignBody2TextBlock}"
                TargetType="TextBlock">
                <Setter Property="Margin" Value="8"/>
            </Style>

            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <Style x:Key="LabelTextBox" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Light"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0,0,0,4"/>
            </Style>

            <DataTemplate x:Key="SwatchColorTemplate" DataType="{x:Type Color}">
                <Button
                    Width="40"
                    Height="40"
                    Background="{Binding Converter={StaticResource ColorToBrushConverter}}"
                    Command="{Binding Source={StaticResource Locator}, Path=MainWindow.SettingsPageViewModel}"
                    CommandParameter="{Binding}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Setter Property="mdix:ButtonAssist.CornerRadius" Value="0"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Margin" Value="1,1,0,0"/>
                            <Setter Property="mdix:RippleAssist.IsDisabled" Value="True"/>
                            <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth0"/>
                            <Setter Property="Tag" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(behaviors:ButtonAssist.UniformCornerRadius)"
                                                    To="8"
                                                    Duration="0:0:0.18"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(behaviors:ButtonAssist.UniformCornerRadius)"
                                                    From="8"
                                                    Duration="0:0:0.18"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                            <Binding
                                                Mode="OneWay"
                                                Path="DataContext.SelectedColor"
                                                RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                            <Binding Mode="OneWay"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(behaviors:ButtonAssist.UniformCornerRadius)"
                                                    To="20"
                                                    Duration="0:0:0.18"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="(behaviors:ButtonAssist.UniformCornerRadius)"
                                                    From="20"
                                                    Duration="0:0:0.18"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel>
        <StackPanel
            Margin="8"
            DockPanel.Dock="Top"
            Orientation="Horizontal">
            <TextBlock VerticalAlignment="Center" FontWeight="Bold">Сетлая тема</TextBlock>
            <ToggleButton Margin="8,0,16,0" IsChecked="{Binding IsDarkTheme}"/>
            <TextBlock VerticalAlignment="Center" FontWeight="Bold">Темная тема</TextBlock>
        </StackPanel>
        <DockPanel>
            <Border DockPanel.Dock="Bottom">
                <Grid>
                    <Grid.Resources>
                        <Style
                            x:Key="PaletteButton"
                            BasedOn="{StaticResource MaterialDesignRaisedButton}"
                            TargetType="Button">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth0"/>
                            <Setter Property="mdix:ShadowAssist.ShadowEdges" Value="All"/>
                            <Setter Property="mdix:RippleAssist.Feedback" Value="LightGray"/>
                            <Setter Property="mdix:RippleAssist.RippleOnTop" Value="True"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="Height" Value="Auto"/>
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                            <Setter Property="Padding" Value="16"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="300"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="LightGray" BorderThickness="0,0,1,0">
                        <Button Command="{Binding ChangeToPrimaryCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                            <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth3"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Основной цвет</TextBlock>

                                <!-- Основной цвет -->
                                <Border Grid.Row="1" Background="{DynamicResource PrimaryHueMidBrush}">
                                    <Grid>
                                        <TextBlock
                                            DataContext="{DynamicResource PrimaryHueMidBrush}"
                                            Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                        <Border
                                            Width="30"
                                            Height="30"
                                            CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontSize="22"
                                                Text="P">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                                <UniformGrid Grid.Row="2" Rows="1">
                                    <!-- Primary light -->
                                    <Border Background="{DynamicResource PrimaryHueLightBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource PrimaryHueLightBrush}"
                                            Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                    </Border>
                                    <!-- Primary dark -->
                                    <Border Background="{DynamicResource PrimaryHueDarkBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource PrimaryHueDarkBrush}"
                                            Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                    </Border>
                                </UniformGrid>
                            </Grid>
                        </Button>
                    </Border>
                    <!-- Secondary selection -->
                    <Border
                        Grid.Column="1"
                        BorderBrush="LightGray"
                        BorderThickness="0,0,1,0">
                        <Button Command="{Binding ChangeToSecondaryCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                            <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth3"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Вторичный цвет</TextBlock>

                                <!-- Вторичный цвет -->
                                <Border Grid.Row="1" Background="{DynamicResource SecondaryAccentBrush}">
                                    <Grid>
                                        <TextBlock
                                            DataContext="{DynamicResource SecondaryHueMidBrush}"
                                            Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                        <Border
                                            Width="30"
                                            Height="30"
                                            CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                            <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontSize="22"
                                                Text="S">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                                <UniformGrid Grid.Row="2" Rows="1">
                                    <Border Background="{DynamicResource SecondaryHueLightBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource SecondaryHueLightBrush}"
                                            Foreground="{DynamicResource SecondaryHueLightForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                    </Border>
                                    <Border Background="{DynamicResource SecondaryHueDarkBrush}">
                                        <TextBlock
                                            DataContext="{DynamicResource SecondaryHueDarkBrush}"
                                            Foreground="{DynamicResource SecondaryHueDarkForegroundBrush}"
                                            Style="{StaticResource HexLabelTextBlock}"
                                            Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                    </Border>
                                </UniformGrid>
                            </Grid>
                        </Button>
                    </Border>
                    <UniformGrid Grid.Column="2" Columns="1">
                        <Border BorderBrush="LightGray" BorderThickness="0,0,0,1">
                            <Button Command="{Binding ChangeToPrimaryForegroundCommand}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth3"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{StaticResource LabelTextBox}">Текст на основном</TextBlock>
                                    <Border Grid.Row="1" Background="{DynamicResource PrimaryHueMidBrush}">
                                        <Grid>
                                            <TextBlock
                                                DataContext="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                                Style="{StaticResource HexLabelTextBlock}"
                                                Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                            <Border
                                                Width="30"
                                                Height="30"
                                                CornerRadius="15">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="22"
                                                    Text="T">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Button>
                        </Border>
                        <Border>
                            <Button Command="{Binding ChangeToSecondaryForegroundCommand}">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource PaletteButton}" TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                <Setter Property="mdix:ShadowAssist.ShadowDepth" Value="Depth3"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{StaticResource LabelTextBox}">Текст на вторичном</TextBlock>
                                    <Border Grid.Row="1" Background="{DynamicResource SecondaryAccentBrush}">
                                        <Grid>
                                            <TextBlock
                                                DataContext="{DynamicResource SecondaryAccentForegroundBrush}"
                                                Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                                                Style="{StaticResource HexLabelTextBlock}"
                                                Text="{Binding Converter={StaticResource BrushToHexConverter}}"/>
                                            <Border
                                                Width="30"
                                                Height="30"
                                                CornerRadius="15">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                <Setter Property="Background" Value="{DynamicResource SecondaryAccentForegroundBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="22"
                                                    Text="T">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentForegroundBrush}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Button>
                        </Border>
                    </UniformGrid>
                </Grid>
            </Border>

            <Border BorderThickness="1,0,1,0" DockPanel.Dock="Bottom">
                <TextBlock Margin="16" Style="{StaticResource LabelTextBox}">ТЕКУЩАЯ ТЕМА</TextBlock>
            </Border>

            <DockPanel Margin="16">
                <Grid DockPanel.Dock="Left">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <DockPanel>
                            <TextBox
                                Margin="2,0,10,2"
                                mdix:HintAssist.Hint="Цвет"
                                DockPanel.Dock="Top"
                                Style="{StaticResource MaterialDesignFilledTextFieldTextBox}"
                                Text="{Binding Color, ElementName=ColorPicker, UpdateSourceTrigger=PropertyChanged}"/>
                            <Rectangle Margin="2,0,10,2" Fill="{Binding Color, ElementName=ColorPicker, Converter={StaticResource ColorToBrushConverter}}"/>
                        </DockPanel>
                        <mdix:ColorPicker
                            x:Name="ColorPicker"
                            Grid.Column="1"
                            Color="{Binding SelectedColor, Delay=25}"/>
                    </Grid>

                </Grid>
            </DockPanel>
        </DockPanel>
    </DockPanel>
</UserControl>
